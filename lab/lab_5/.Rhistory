x <- function(x) {}
x <- function(x) {
x*2}
x
x(2)
f <- c(1,23,4,5,6,9)
x(f)
to_kelvin = function(celsius) celsius + 273.15
to_kelvin(1)
to_kelvin(f)
c(range(4))
c(range(1,4))
range(1,3)
list(range(1,3))
f = 1:10
f
to_kelvin(test)
to_kelvin = function(celsius) celsius + 273.15
test = 1:5
to_kelvin(test)
# Your code goes here.
# Your code goes here.
to_kelvin=function(celsius=(fahrenheit-32)/1.8,fahrenheit)
to_kelvin(test)
to_kelvin(test)
to_kelvin(2)
to_kelvin(2,1)
to_kelvin(0, 32)
to_kelvin(, 32)
to_kelvin(32)
to_kelvin(1)
# Your code goes here.
to_kelvin=function(celsius=(fahrenheit-32)/1.8,fahrenheit){
celsius + 273.15
}
to_kelvin(32)
to_kelvin(1,32)
to_kelvin(1200)
to_kelvin(1)
to_kelvin(32)
to_kelvin(0)
# Your code goes here.
to_kelvin=function( fahrenheit, celsius=(fahrenheit-32)/1.8){
celsius + 273.15
}
to_kelvin(0)
to_kelvin(32)
to_kelvin(0, 1)
to_kelvin(test)
# Your code goes here.
to_kelvin=function( fahrenheit, celsius=(fahrenheit-32)/1.8)
to_kelvin(test)
to_kelvin(test)
# Your code goes here.
to_kelvin=function( fahrenheit, celsius=(fahrenheit-32)/1.8){}
to_kelvin(test)
{
celsius + 273.15
}
{
celsius + 273.15
}
# Your code goes here.
to_kelvin=function( fahrenheit, celsius=(fahrenheit-32)/1.8){
celsius + 273.15
}
to_kelvin(test)
test_f = 32:37
to_kelvin(test_f)
to_kelvin(test_c)
to_kelvin = function(celsius){
celsius + 273.15
}
test_c = 1:5
to_kelvin(test)
# Your code goes here.
to_kelvin=function( fahrenheit, celsius=(fahrenheit-32)/1.8){
celsius + 273.15
}
test_f = 32:37
to_kelvin(test_f)
to_kelvin(test_c)
to_kelvin(,test_c)
to_kelvin(test_f)
# Your code goes here.
to_kelvin=function( fahrenheit, celsius=(fahrenheit-32)/1.8){
celsius + 273.15
}
test_f = 32:37
to_kelvin(test_f)
to_kelvin(,test_c)
to_kelvin(test_f, test_c)
to_kelvin(test_c)
to_kelvin = function(temperature, unit){
if(match.arg(unit, "fahrenheit")) {
(temperature - 32) * (5/9) + 273.15
}
else if(match.arg(unit, "celsius")){
temperature + 273.15
}
else {
"Incorrect Units inputted"
}
}
to_kelvin(test_c)
to_kelvin(test_c, "f")
if(match.arg(unit, c("fahrenheit")) {
if(match.arg(unit, c("fahrenheit"))) {
(temperature - 32) * (5/9) + 273.15
}
to_kelvin = function(temperature, unit){
if(match.arg(unit, c("fahrenheit"))) {
(temperature - 32) * (5/9) + 273.15
}
else if(match.arg(unit, "celsius")){
temperature + 273.15
}
else {
"Incorrect Units inputted"
}
}
to_kelvin(test_c, "f")
to_kelvin(test_c, "fahrenheit")
to_kelvin = function(temperature, unit){
if(match.arg(unit, c("fahrenheit"))) {
(temperature - 32) * (5/9) + 273.15
}
else if(match.arg(unit, "celsius")){
temperature + 273.15
}
else {
"Incorrect Units inputted"
}
}
to_kelvin(test_c, "fahrenheit")
match.arg("hi", c("h"))
x = "hi"
match.arg(x, c("hi"))
match.arg(x, c("k"))
match.arg(x, c("1234"))
# NOT RUN {
require(stats)
## Extends the example for 'switch'
center <- function(x, type = c("mean", "median", "trimmed")) {
type <- match.arg(type)
type
switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
x <- rcauchy(10)
center(x, "t")       # Works
center(x, "med")     # Works
try(center(x, "m"))  # Error
stopifnot(identical(center(x),       center(x, "mean")),
identical(center(x, NULL), center(x, "mean")) )
center <- function(x, type = c("mean", "median", "trimmed")) {
type <- match.arg(type)
type
switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
center
center(10)
center(10, "mean")
print(type)
center <- function(x, type = c("mean", "median", "trimmed")) {
type <- match.arg(type)
print(type)
switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
center(10, "mean")
center(10, "mea")
x = "unit"
x = "unit"
x == "unit"
to_kelvin = function(temperature, unit = c("fahrenheit", "celsius"){
to_kelvin = function(temperature, unit = c("fahrenheit", "celsius"){
to_kelvin = function(temperature, unit = c("fahrenheit", "celsius"){
to_kelvin = function(temperature, unit = c("fahrenheit", "celsius")){
unit = match.arg(unit)
if (unit == "fahrenheit") {
(temperature - 32) * (5/9) + 273.15
}
else if (unit == "celsius") {
temperature + 273.15
}
else {
"Incorrect Units inputted"
}
}
to_kelvin(test_c, "fahrenheit")
to_kelvin(test_c, "fah")
to_kelvin(test_f, "f")
to_kelvin(test_c, "c")
to_kelvin(100, "hi")
typeof(20)
typeof(20.2)
typeof(2)
typeof(2L)
typeof("asdf")
typeof("asdf") = character
typeof("asdf") = "character"
typeof("asdf") == "character"
typeof("asdf") == character
to_kelvin = function(temperature, unit){
if (typeof(unit) == "character"){
unit = match.arg(c("celsius", "fahrenheit"))
print(unit)
}
else {
temperature * unit
}
if (unit == "fahrenheit") {
(temperature - 32) * (5/9) + 273.15
}
else if (unit == "celsius") {
temperature + 273.15
}
}
to_kelvin(102, 2)
to_kelvin = function(temperature, unit){
if (typeof(unit) == "character"){
unit = match.arg(c("celsius", "fahrenheit"))
print(unit)
}
else {
return temperature * unit
to_kelvin = function(temperature, unit){
if (typeof(unit) == "character"){
unit = match.arg(c("celsius", "fahrenheit"))
print(unit)
}
else {
temperature * unit
}
}
to_kelvin(1:2)
to_kelvin(1:2, 3)
to_kelvin(1, 3)
length(1:2)
length(1:5)
length(1:123)
to_kelvin = function(temperature, unit = c("fahrenheit", "celsius")){
temperature[unit == match.arg(unit)] + 1000
}
to_kelvin(100, "f")
to_kelvin = function(temperature, unit = c("fahrenheit", "celsius")){
temperature[unit == "f"] + 1000
}
}
to_kelvin(100, "f")
to_kelvin(1:3, c("f", "c", "f"))
to_kelvin = function(temperature, unit = c("fahrenheit", "celsius")){
temperature[unit == "f"] + 1000 or temperature[unit == "c"] + 90
to_kelvin = function(temperature, unit){
temperature[unit]*unit
}
temperature[unit == "f"] + 1000 or temperature[unit == "c"] + 90
to_kelvin(1:3, c(87, 77, 99))
x = 1:10
f = 5:15
x*f
x
f = 3:4
x[f == 4] * 10
x
to_kelvin = function(temperature, unit){
temperature[unit == "fahrenheit"] = (temperature[unit == "fahrenheit"] - 32) * (5/9)
if(length(unit) == 1) {
temperature + 273.15
}
else if (length(unit) == length(temperature)){
temperature + 273.15
}
else {
stop("Length of unit vector does NOT match length of temperature vector")
}
}
to_kelvin(test_c)
to_kelvin(test_c, c("f", "c"))
to_kelvin(test_c, c("f"))
to_kelvin(test_c, c("c"))
test_c
to_kelvin(test_f, c("c"))
to_kelvin(test_f, c("f"))
units = c("c", "f", "c")
units
match.arg(units)
t = 1:10
t = 1:3
t
t[units == match.arg("fahrenheit")]
t[units == match.arg(c("fahrenheit")]
t[units == match.arg(c("fahrenheit"))]
to_kelvin = function(temperature, unit){
temperature[unit == "fahrenheit"] = (temperature[unit == "fahrenheit"] - 32) * (5/9)
if(length(unit) == 1) {
temperature + 273.15
}
else if (length(unit) == length(temperature)){
temperature + 273.15
}
else {
stop("Length of unit vector does NOT match length of temperature vector")
}
}
to_kelvin(100:103, c("fahrenheit", "c", "fahrenheit"))
to_kelvin(c(111, 300, 20), c("fahrenheit", "c", "fahrenheit"))
to_kelvin(c(111, 300, 20))
to_kelvin(c(111, 300, 20), "c")
111-32
79 * (5/9)
43.8889 + 273
to_kelvin = function(temperature, unit){
temperature[unit == "fahrenheit"] = (temperature[unit == "fahrenheit"] - 32) * (5/9)
if(length(unit) == 1) {
temperature + 273.15
}
else if (length(unit) == length(temperature)){
temperature + 273.15
}
else {
stop("Length of unit vector does NOT match length of temperature vector")
}
}
final_test = c(120, 68, 14)
units = c("fahrenheit", "celsius", "celsius")
to_kelvin(final_test, units)
cube = function(x){
if (x == 0) {
45
}
x^3
}
cube(0)
cube(9)
cube = function(x){
if (x == 0) {
return(45)
}
x^3
}
cube(0)
cube = function(x){
if (x == 0)
return(45)
x^3
}
cube(9)
cube(0)
cube = function(x){
if (x == 0)
x+2
x^3
}
cube(0)
cube(9)
cube = function(x){
if (x == 0)
return (x+2)
x^3
}
cube(9)
cube(0)
fib <- function (n = 15){
if (n == 1) | (n == 2) return (1)
fib(n-1) + fib(n - 2)
}
fib <- function (n = 15){
if (n == 1) | (n == 2) {
return (1)
}
fib(n-1) + fib(n - 2)
}
fib <- function (n = 15){
if (n == 1) | (n == 2) {
return (1)
}
fib(n-1) + fib(n - 2)
}
fib <- function (n = 15){
if (n == 1) | (n == 2)
return(1)
fib(n-1) + fib(n - 2)
}
fib <- function(n = 15) {
if (n == 1) | (n == 2)
return(1)
fib(n-1) + fib(n - 2)
}
fib <- function(n = 15) {
if (n == 1) | (n == 2)
return(1)
fib(n-1) + fib(n - 2)
}
fib <- function(n = 15) {
if (n == 1) | (n == 2)
return(1)
fib(n-1) + fib(n - 2)
}
plot(cars)
fib <- function(n = 15) {
if (n == 1) | (n == 2)
fib <- function(n = 15) {
if (n == 1) | (n == 2)
return(1)
fib(n-1) + fib(n - 2)
}
fib <- function(n = 15) {
if (n == 1) | (n == 2)
fib <- function(n = 15) {
if (n == 1 | n == 2)
return(1)
fib(n-1) + fib(n - 2)
}
fib(4)
fib(213)
g
ls()
ls(globalenv())
ls(all.names = TRUE
)
globalenv()[["x"]]
globalenv()["x"]
get("x", globalenv())
y = get("x", globalenv())
y
for ( i in y){message("HHHIIII")}
parent.env(globalenv())
